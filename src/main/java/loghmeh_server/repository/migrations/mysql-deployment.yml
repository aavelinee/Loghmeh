apiVersion: v1
kind: Service
metadata:
  name: loghmeh-mysql
  labels:                         # Labels that will be applied to the resource
    app: loghmeh
spec:
  ports:
  - port: 3306
  selector:
    app: loghmeh
    tier: mysql
  clusterIP: None
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: loghmeh-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loghmeh
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: loghmeh
    spec:
      containers:
      - name: mysql
        image: mysql 
        env:
        # - name: MYSQL_ROOT_PASSWORD 
        #   valueFrom:                # Read environment variables from kubernetes secrets
        #     secretKeyRef:
        #       name: mysql-root-pass
        #       key: password
        - name: MYSQL_ROOT_PASSWORD
          value: password
        resources:
          requests:
            memory: 500Mi
            cpu: 400m
          limits:
            memory: 600Mi
            cpu: 600m
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: /home/baharan/Desktop/IE/React/08-React/src/main/java/loghmeh_server/repository/migrations/Loghmeh.sql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
      memory: 500Mi
      cpu: 400m
    limits:
      memory: 600Mi
      cpu: 600m